pcepnpcf<-Aids6 %>% group_by(Sexo) %>%
filter(F_Diagnostico>1980) %>%
summarise(Edad_Media=mean(Edad), count=n())
knitr::kable(pcepnpcf)
Tabla4 <- Aids2 %>% group_by(TransmissionCategory) %>% summarise(Total=n()) %>%   # seleccion por grupo TransmissionCategory y obtenemos un sumario de contabilizar los totales.
dplyr::mutate(Porcentaje = round(Total/sum(Total)*100, 1))  # mutate realiza cambios en la tabla entregando un campo porcentaje
knitr::kable(Tabla4)
ggplot(Tabla4, aes(x = TransmissionCategory, y=Total, fill=TransmissionCategory) ) +
geom_bar(width = 0.6, stat="identity", position = position_dodge())+
ylim(c(0,2486))+
labs(x="Estados de los Pacientes", y= "Frecuencia \n (Porcentajes)") +
labs(fill = "")+
geom_text(aes(label=paste0(Total," ", "", "\n(", Porcentaje, "%",")")),
vjust=1.0,
color="black",
hjust=0.5,
position = position_dodge(0.9),
angle=0,
size=3.0
) +
scale_fill_discrete(name = "Categoría Transmisión", labels = c("Blood", "Haem","Het","Hs","Hsid","id","Mother","Other")) +
theme(axis.text.x = element_text(angle = -45, vjust = 1, hjust=-0.3)) +
theme_linedraw() +
theme(legend.position = "left") +
facet_grid(~"Diagrama de barras para la variable categoría de transmisión")
Tabla4 <- Aids2 %>% group_by(TransmissionCategory) %>% summarise(Total=n()) %>%   # seleccion por grupo TransmissionCategory y obtenemos un sumario de contabilizar los totales.
dplyr::mutate(Porcentaje = round(Total/sum(Total)*100, 1))  # mutate realiza cambios en la tabla entregando un campo porcentaje
knitr::kable(Tabla4)
ggplot(Tabla4, aes(x = TransmissionCategory, y=Total, fill=TransmissionCategory) ) +
geom_bar(width = 0.6, stat="identity", position = position_dodge())+
ylim(c(0,2486))+
labs(x="Estados de los Pacientes", y= "Frecuencia \n (Porcentajes)") +
labs(fill = "")+
geom_text(aes(label=paste0(Total," ", "", "\n(", Porcentaje, "%",")")),
vjust=1.0,
color="black",
hjust=0.5,
position = position_dodge(0.9),
angle=0,
size=3.0
) +
scale_fill_discrete(name = "Categoría Transmisión", labels = c("Blood", "Haem","Het","Hs","Hsid","id","Mother","Other")) +
theme(axis.text.x = element_text(angle = -45, vjust = 1, hjust=-0.3)) +
theme_linedraw() +
theme(legend.position = "left") +
facet_grid(~"Diagrama de barras para la variable categoría de transmisión")
ggplot(Aids2, aes(as.numeric(Age))) +
geom_histogram(binwidth = function(x) 20 / (sqrt(length(x))), colour="black", fill="orange") +
labs(x="Edades",y="Cantidades") +
ggtitle("Histogramas Edades de los Pacientes") +
facet_wrap(~Sex, scales = 'free_x')
# Representación de las variables por su categoria
#par(mfrow = c(1, 2))
ggplot(data=Aids3, aes(x=Estado, y=Edad, fill=Estado)) +
geom_boxplot()+
xlab("Estado(A = vivo - D= Muerto)") +
ylab("Edad al momento del daignóstico") +
ggtitle("Estado del Paciente ")+
theme (text = element_text(size=12))+
labs(fill = "Estados del Paciente ")+
theme_minimal()
ggplot(data=Aids3, aes(x=Aids3$C_Transmision, y=Aids3$Edad, fill=Aids3$C_Transmision)) +
geom_boxplot()+
xlab("Estado del paciente por Categoría de transmisión") +
ylab("Edad al momento del diagnóstico") +
ggtitle("Estado por Transmision del Paciente ")+
theme (text = element_text(size=12))+
labs(fill = "Estados del Paciente ")+
theme_minimal()
# se le creal el campo tiempo y se aprovecha de crear Estado de fallecidos del campo muerto.
Aids3<- mutate(Aids3,Muerto = Estado == "D", Tiempo = as.numeric(F_Muerte - F_Diagnostico))
plotrel<-ggplot(data = Aids3,  aes(x=Edad , y=Tiempo , group = C_Transmision)) +
geom_point(aes( color=C_Transmision)) +
facet_wrap(~C_Transmision) +
coord_cartesian(xlim=c(0,90),ylim = c(0, 2500)) +
scale_y_continuous(breaks = c(0,500,1000,1500,2000,2500)) +
scale_x_continuous(breaks = c(0,15,30,45,60,75,90)) +
labs( x = "Edad al momento del diagnóstico", y = "Tiempo de vida", title ="Relación entre tiempo de vida y edad del paciente", subtitle = "Por Categoría de Transmisión", caption = "Relación entre fecha diagnóstico, hasta la fecha de muerte del paciente, agrupado por categoría de transmisión")
plotrel + theme(axis.title = element_text(size = 14),
axis.text.x = element_text(size = 8),
plot.title = element_text(family = "Bookman",
colour = "black"), legend.title = element_text(colour = "darkblue"),
legend.position = "bottom", legend.direction = "horizontal")
# función que calcúla la moda
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# tabla de consulta para edad y tiempo para sus cálculos medidas estadísticas.
MedEst<- Aids3 %>%
summarise(Atributo=c("Edad","Tiempo"), # aplica sumario para registrar las medidas estadísticas
Media=c(mean(Edad),mean(Tiempo)), # mean cálcula la media
Mediana= c(median(Edad),median(Tiempo)), # cálcula ma mediana
Desv_SD= c(sd(Edad),sd(Tiempo)), # cálcula la desviación standard
Q1= c(quantile(Edad, .25),quantile(Tiempo, .25)), # cuartil 1
Q2= c(quantile(Edad, .50),quantile(Tiempo, .50)), # cuartil 2
Q3= c(quantile(Edad, .75),quantile(Tiempo, .75)), # cuartil 3
Moda= c(Mode(Edad),Mode(Tiempo)), # Aplicando la moda por la función externa
Min= c(min(Edad),min(Tiempo)), # obteniendo el mínimo de valor
Max= c(max(Edad),max(Tiempo)), # obteniendo el máximo de valor
contar=n() # cuenta los valores
)
knitr::kable(MedEst) # pasamos la variable MedEst para presentar la tabla
Tabla5 <- Aids3 %>% group_by(C_Transmision) %>% summarise(Total=n(),
Age_Media=mean(Edad),  # función que cálcula la media
sd_Age=sd(Edad), # función que cálcula la desviación
se_Age=sd_Age/sqrt(Total), # desviación tipica
upper_limit=Age_Media+se_Age, # cálculos de los límites
lower_limit=Age_Media-se_Age) %>%
dplyr::mutate(Porcentaje = round(Total/sum(Total)*100, 1) ) # mutate realiza cambios en la tabla entregando un campo porcentaje
knitr::kable(Tabla5)
Tabla6 <- Aids3 %>% group_by(C_Transmision) %>% summarise(Total=n(),
Tiempo_Media=mean(Tiempo),  # cálcula la media
sd_Tiempo=sd(Tiempo),  # cálcula la desviación
se_Tiempo=sd_Tiempo/sqrt(Total),  # desviación típica
upper_limit=Tiempo_Media+se_Tiempo, # limite superior
lower_limit=Tiempo_Media-se_Tiempo) %>%   # limite inferior
dplyr::mutate(Porcentaje = round(Total/sum(Total)*100, 1) ) # mutate realiza cambios en la tabla entregando un campo porcentaje
knitr::kable(Tabla6)
ggplot(Tabla5, aes(x=C_Transmision, y=Age_Media, fill=C_Transmision)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Age_Media-sd_Age, ymax=Age_Media+sd_Age), width=.2)
# Proceso de transformación de datos en sus atributos tranformamos los campos fechas por campos numéricos para proceso de la información
Aids4<-data.frame(E_Origen=Aids3$E_Origen,Sexo=Aids3$Sexo,F_Diagnostico=as.numeric(Aids3$F_Diagnostico),
F_Muerte=as.numeric(Aids3$F_Muerte),Estado=Aids3$Estado,C_Transmision=Aids3$C_Transmision,
Edad=as.integer(Aids3$Edad))
knitr::kable(head(Aids4,5))
cpmsw1<-Aids4 %>% filter(E_Origen == 'NSW')
#summarise(count=n()) # son 1780 pacientes con VIH
cpmsw1<-tibble(cpmsw1)
knitr::kable(head(cpmsw1,10))
cat(" El total pacientes del estado NSW tienen VIH son: ")
cpmsw2<-Aids4 %>% filter(E_Origen == 'NSW') %>%
summarise(count=n())
cpmsw2
cpqld<-Aids4 %>% group_by(Estado) %>%
filter(E_Origen=='QLD' & Sexo=='M' & Estado=='D')
#cpqld<-tibble(cpqld)
knitr::kable(head(cpqld,6))
cat("El total de pacientes del estado QLD y del sexo masculino han muerto por VIH son: ")
cpqld2<-Aids4 %>% filter(E_Origen=='QLD' & Sexo=='M' & Estado=='D') %>%
summarise(count=n())
cpqld2
pcvic<-Aids4 %>% filter(E_Origen=='VIC', Sexo=='F',Edad<=35 | Edad >=50) %>% dplyr::select(E_Origen,Sexo,Edad)
pcvic<-tibble(pcvic)
knitr::kable(head(pcvic,11))
cat("Sexo femenino VIC que no están en el rango de edades entre 35 y 50 años son:")
pcvic1<-Aids4 %>%  filter(E_Origen=='VIC', Sexo=='F', Edad<=35 | Edad >=50) %>%
summarise(count=n())
pcvic1
# Proceso de transformación de datos en sus atributos.
Aids5<-data.frame(E_Origen=Aids3$E_Origen,Sexo=Aids3$Sexo,F_Diagnostico=as.numeric(format(Aids3$F_Diagnostico,'%Y')),
F_Muerte=as.numeric(format(Aids3$F_Muerte, '%Y')),Estado=Aids3$Estado,C_Transmision=Aids3$C_Transmision,
Edad=as.integer(Aids3$Edad))
cpdvih<-Aids5 %>% filter(F_Muerte >1982 & Estado=='D') %>% dplyr::select(E_Origen,F_Muerte,Estado,Edad)
knitr::kable(head(cpdvih,7))
cat("Los pacientes con fecha de muerte > a 1892 fueron un total de:")
cpdvih1<-Aids5 %>% filter(F_Muerte >1982 & Estado=='D') %>%
summarise(count=n())
cpdvih1
# se le creal el campo tiempo y se aprovecha de crear Estado de fallecidos del campo muerto.
Aids3<- mutate(Aids3,Muerto = Estado == "D", Tiempo = F_Muerte - F_Diagnostico)
# Proceso de transformación de datos en sus atributos.
Aids6<-data.frame(E_Origen=Aids3$E_Origen,Sexo=Aids3$Sexo,F_Diagnostico=as.numeric(format(Aids3$F_Diagnostico,'%Y')),
F_Muerte=as.numeric(format(Aids3$F_Muerte, '%Y')),Estado=Aids3$Estado,C_Transmision=Aids3$C_Transmision,
Edad=as.integer(Aids3$Edad),Muerto=as.character(Aids3$Muerto), Tiempo=as.integer(Aids3$Tiempo))
tablatib<-tibble(Aids6) # la tabla se convierte en una tabla tibble
knitr::kable(head(tablatib,6)) # convertimos la tabla en una presentación de las 10 primeras filas.
pcmtdm<-Aids6 %>% group_by(E_Origen)  %>%
filter(Tiempo == min(Tiempo)) %>%
summarise(minimoTiempo=min(Tiempo), count=n())
knitr::kable(pcmtdm)
cat("Los pacientes antes de su fecha de muerte o del fin de la observación fueron: ")
pcmtdm2<-Aids6 %>% dplyr::select(Tiempo)  %>%
filter(Tiempo == min(Tiempo)) %>%
summarise(minimoTiempo=min(Tiempo), count=n())
pcmtdm2
pcdcsm<- Aids6 %>% filter(F_Diagnostico >=1986, Edad < 35)
pcdcsm<-tibble(pcdcsm)
knitr::kable(head(pcdcsm,8))
#cat("pacientes diagnosticados después de 1986 , ¿Cuántos son menores de 35 años?, en total son:")
pcdcsm1<- Aids6 %>% filter(F_Diagnostico >1986, Edad < 35) %>%
summarise(count=n())
pcdcsm1
pcgfcb<-Aids6 %>% filter(Sexo=='F', C_Transmision=='blood')
pcgfcb<-tibble(pcgfcb)
knitr::kable(head(pcgfcb, 8))
cat("Contagiados por sangre fueron de un total de:")
pcgfcb<-Aids6 %>% filter(Sexo=='F', C_Transmision=='blood') %>%
summarise(count=n())
pcgfcb
ftra<-Aids6 %>%
dplyr::select(C_Transmision ) %>%  # selecciona el campo por C_Transmision
group_by(C_Transmision ) %>%  # agrupa por una o más variable C_Transmision
filter(C_Transmision !='blood') %>%  # obtiene datos por filtros C_Transmision
summarise(n=n()) %>% # realiza una operacion por cada grupo en menos filas
arrange(n) # ordena las filas según los valores de una o más columnas
knitr::kable(ftra)
pcepnpcf<-Aids6 %>% group_by(Sexo) %>%
filter(F_Diagnostico>1980) %>%
summarise(Edad_Media=mean(Edad), count=n())
knitr::kable(pcepnpcf)
ggplot(Tabla5, aes(x=C_Transmision, y=Age_Media, fill=C_Transmision)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Age_Media-sd_Age, ymax=Age_Media+sd_Age), width=.2)
ggplot(Tabla5, aes(x=C_Transmision, y=Tiempo_Media, fill=C_Transmision)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Tiempo_Media-sd_Tiempo, ymax=Tiempo_Media+sd_Tiempo), width=.2)
ggplot(Tabla6, aes(x=C_Transmision, y=Tiempo_Media, fill=C_Transmision)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Tiempo_Media-sd_Tiempo, ymax=Tiempo_Media+sd_Tiempo), width=.2)
ggplot(Tabla5, aes(x=C_Transmision, y=Age_Media, fill=C_Transmision)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
ggtitle("Transmision del Paciente Edad Media ")+
geom_errorbar(aes(ymin=Age_Media-sd_Age, ymax=Age_Media+sd_Age), width=.2)
ggplot(Tabla6, aes(x=C_Transmision, y=Tiempo_Media, fill=C_Transmision)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
ggtitle("Transmision del Paciente Por Tiempo de vida ")+
geom_errorbar(aes(ymin=Tiempo_Media-sd_Tiempo, ymax=Tiempo_Media+sd_Tiempo), width=.2)
rm(list = ls())   # limpiamos nuestro entorno cada vez que lo ejecutamos,\tableofcontents
knitr::opts_chunk$set(warning = FALSE, message = FALSE) # evitar que aparezcan mensajes o warnings cuando se compila
# conjunto de cargas de paquetes que seran instalados si no existe, en caso contrario lo leerrá
if(!require(tidyverse)) { install.packages("tidyverse"); library(tidyverse) } # Conjunto de paquetes de datos que estan incluidos para realizar analisis o ciencia de datos.
if(!require(readxl)) { install.packages("readxl"); library(readxl) } # lectura de archivo xlsx
if(!require(readr)) { install.packages("readr"); library(readr) } # lectura de documento csv
# Librerías que son llamadas durante el proyecto para uso del proceso de codigos para obtener un resultado.
library(tidyverse) # llamada a la librería de tidyverse.
library(readxl) # llamada a la librería de archivos excel.
library(scales) # para utilizar scales en pie en porcentajes
library(MASS)
# Conección de la data de excel a la variable Aids
Aids <- read_excel("Aids2.xlsx") # lectura de la datasets excel alojado en el objeto Aids
Aids2<-data.frame(Aids)# convertimos la dataset en una dataframe nueva con nombre Aids.
# mostramos los primeros 5 campos de la tabla.
knitr::kable(head(Aids2,5)) # con head nos permite visualizar los 5  primeros datos de la tabla o especificar cuantos datos con n
knitr::kable(tail(Aids2,5)) # knitr fuerza a la función kabble a convertirla en una tabla mostrando los 5 últimos datos de la dataset.
# aplicamos la función apply para obtener los valores nulos de cada campo.
appl<- apply(X = is.na(Aids2), MARGIN = 2, FUN = sum)
knitr::kable(t(appl)) # muestra una tabla con kable para presentación.
# Usamos el operador pipe para realizar una consulta con la función summarise_all, así obtenemos los totales de NA por columnas.
aidp<-Aids2 %>% summarise_all(funs(n_distinct(.))) # Función que encuentra todos los valores únicos.
knitr::kable(aidp) # muestra una tabla con kable para presentación.
# Pasamos  nuestra dataframe intemedio de la función glimpse que observaremos como está la estructura la dataframe Aids.
glimpse(Aids2) #
# Obtención de la dimensión de la dataframe
cat("El tamaño de la dimensión es : ",dim(Aids2),"\n")
# obtenemos filas y columnas por separados indicados anteriormente
cat("con total de columnas ", ncol(Aids2), "con un total de filas ", nrow(Aids),"\n")
# Obtención de los nombres de columnas
cat("Las columnas son: (", names(Aids2),")\n")
# proceso de transformación de datos en sus atributos, creando una nueva tabla Aids3 con cambios en la dataset oroginal anterior
Aids3<-data.frame(E_Origen=Aids2$State,Sexo=Aids2$Sex,F_Diagnostico=as.Date(Aids2$Diagnosis),
F_Muerte=as.Date(Aids2$Death),Estado=Aids2$Status,C_Transmision=Aids2$TransmissionCategory,
Edad=as.integer(Aids2$Age))
knitr::kable(head(Aids3,5)) # muestra una tabla con kable para presentación.
fx<-Aids3 %>%  select_all() %>% # seledciona todos los campos de la tabla
summary() # registra un sumario a la toatalidad de los atributos, mínimo, máximo, media,mediana y quartiles.
knitr::kable(fx)  # muestra una tabla con kable para presentación.
# usamos dplyr para consultar por los datos Aids2, agrupándolos por campo state
Tabla1 <- Aids2 %>% group_by(State) %>% summarise(Total=n()) %>%
dplyr::mutate(Porcentaje = round(Total/sum(Total)*100, 1))  # mutate realiza cambios en la tabla entregando un campo porcentaje.
knitr::kable(Tabla1) # muestra una tabla con kable para presentación.
ggplot(Tabla1, aes(x = State, y=Total, fill=State) ) +
geom_bar(width = 0.9, stat="identity", position = position_dodge())+
ylim(c(0,2000))+
labs(x="Estado de los Pacientes", y= "Frecuencia \n (Porcentajes)") +
labs(fill = "")+
geom_text(aes(label=paste0(Total," ", "", "\n(", Porcentaje, "%",")")),
vjust=1.3,
color="black",
hjust=0.5,
position = position_dodge(0.9),
angle=0,
size=4.0
) +
scale_fill_discrete(name = "Estado Origen", labels = c("NSW", "Other","QLD","VIC")) +
theme(axis.text.x = element_text(angle = -45, vjust = 1, hjust=-0.3)) +
theme_linedraw() +
theme(legend.position = "left") +
facet_grid(~"Diagrama de barras para la variable State")
Tabla2 <- Aids2 %>% group_by(Sex) %>% summarise(Total=n()) %>%
dplyr::mutate(Porcentaje = round(Total/sum(Total)*100, 1))  # mutate realiza cambios en la tabla entregando un campo porcentaje
knitr::kable(Tabla2)
ggplot(Tabla2, aes(x = Sex, y=Total, fill=Sex) ) +
geom_bar(width = 0.6, stat="identity", position = position_dodge())+
ylim(c(0,2755))+
labs(x="Genero de los Pacientes", y= "Frecuencia \n (Porcentajes)") +
labs(fill = "")+
geom_text(aes(label=paste0(Total," ", "", "\n(", Porcentaje, "%",")")),
vjust=1.0,
color="black",
hjust=0.5,
position = position_dodge(0.9),
angle=0,
size=3.0
) +
scale_fill_discrete(name = "Género", labels = c("Femenino", "Masculino")) +
theme(axis.text.x = element_text(angle = -45, vjust = 1, hjust=-0.3)) +
theme_linedraw() +
theme(legend.position = "left") +
facet_grid(~"Diagrama de barras para la variable Sex")
Tabla3 <- Aids2 %>% group_by(Status) %>% summarise(Total=n()) %>%
dplyr::mutate(Porcentaje = round(Total/sum(Total)*100, 1))   # mutate realiza cambios en la tabla entregando un campo porcentaje
knitr::kable(Tabla3) # pasamos a tabla por la función kable para visualizarla.
ggplot(Tabla3, aes(x = Status, y=Total, fill=Status) ) +
geom_bar(width = 0.6, stat="identity", position = position_dodge())+
ylim(c(0,2755))+
labs(x="Estados de los Pacientes", y= "Frecuencia \n (Porcentajes)") +
labs(fill = "")+
geom_text(aes(label=paste0(Total," ", "", "\n(", Porcentaje, "%",")")),
vjust=1.0,
color="black",
hjust=0.5,
position = position_dodge(0.9),
angle=0,
size=3.0
) +
scale_fill_discrete(name = "Estado Sobreviviencia", labels = c("A=Vivo", "D=Muerto")) +
theme(axis.text.x = element_text(angle = -45, vjust = 1, hjust=-0.3)) +
theme_linedraw() +
theme(legend.position = "left") +
facet_grid(~"Diagrama de barras para la variable Sex")
Tabla4 <- Aids2 %>% group_by(TransmissionCategory) %>% summarise(Total=n()) %>%   # seleccion por grupo TransmissionCategory y obtenemos un sumario de contabilizar los totales.
dplyr::mutate(Porcentaje = round(Total/sum(Total)*100, 1))  # mutate realiza cambios en la tabla entregando un campo porcentaje
knitr::kable(Tabla4)
ggplot(Tabla4, aes(x = TransmissionCategory, y=Total, fill=TransmissionCategory) ) +
geom_bar(width = 0.6, stat="identity", position = position_dodge())+
ylim(c(0,2486))+
labs(x="Estados de los Pacientes", y= "Frecuencia \n (Porcentajes)") +
labs(fill = "")+
geom_text(aes(label=paste0(Total," ", "", "\n(", Porcentaje, "%",")")),
vjust=1.0,
color="black",
hjust=0.5,
position = position_dodge(0.9),
angle=0,
size=3.0
) +
scale_fill_discrete(name = "Categoría Transmisión", labels = c("Blood", "Haem","Het","Hs","Hsid","id","Mother","Other")) +
theme(axis.text.x = element_text(angle = -45, vjust = 1, hjust=-0.3)) +
theme_linedraw() +
theme(legend.position = "left") +
facet_grid(~"Diagrama de barras para la variable categoría de transmisión")
ggplot(Aids2, aes(as.numeric(Age))) +
geom_histogram(binwidth = function(x) 20 / (sqrt(length(x))), colour="black", fill="orange") +
labs(x="Edades",y="Cantidades") +
ggtitle("Histogramas Edades de los Pacientes") +
facet_wrap(~Sex, scales = 'free_x')
# Representación de las variables por su categoria
#par(mfrow = c(1, 2))
ggplot(data=Aids3, aes(x=Estado, y=Edad, fill=Estado)) +
geom_boxplot()+
xlab("Estado(A = vivo - D= Muerto)") +
ylab("Edad al momento del daignóstico") +
ggtitle("Estado del Paciente ")+
theme (text = element_text(size=12))+
labs(fill = "Estados del Paciente ")+
theme_minimal()
ggplot(data=Aids3, aes(x=Aids3$C_Transmision, y=Aids3$Edad, fill=Aids3$C_Transmision)) +
geom_boxplot()+
xlab("Estado del paciente por Categoría de transmisión") +
ylab("Edad al momento del diagnóstico") +
ggtitle("Estado por Transmision del Paciente ")+
theme (text = element_text(size=12))+
labs(fill = "Estados del Paciente ")+
theme_minimal()
# se le creal el campo tiempo y se aprovecha de crear Estado de fallecidos del campo muerto.
Aids3<- mutate(Aids3,Muerto = Estado == "D", Tiempo = as.numeric(F_Muerte - F_Diagnostico))
plotrel<-ggplot(data = Aids3,  aes(x=Edad , y=Tiempo , group = C_Transmision)) +
geom_point(aes( color=C_Transmision)) +
facet_wrap(~C_Transmision) +
coord_cartesian(xlim=c(0,90),ylim = c(0, 2500)) +
scale_y_continuous(breaks = c(0,500,1000,1500,2000,2500)) +
scale_x_continuous(breaks = c(0,15,30,45,60,75,90)) +
labs( x = "Edad al momento del diagnóstico", y = "Tiempo de vida", title ="Relación entre tiempo de vida y edad del paciente", subtitle = "Por Categoría de Transmisión", caption = "Relación entre fecha diagnóstico, hasta la fecha de muerte del paciente, agrupado por categoría de transmisión")
plotrel + theme(axis.title = element_text(size = 14),
axis.text.x = element_text(size = 8),
plot.title = element_text(family = "Bookman",
colour = "black"), legend.title = element_text(colour = "darkblue"),
legend.position = "bottom", legend.direction = "horizontal")
# función que calcúla la moda
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# tabla de consulta para edad y tiempo para sus cálculos medidas estadísticas.
MedEst<- Aids3 %>%
summarise(Atributo=c("Edad","Tiempo"), # aplica sumario para registrar las medidas estadísticas
Media=c(mean(Edad),mean(Tiempo)), # mean cálcula la media
Mediana= c(median(Edad),median(Tiempo)), # cálcula ma mediana
Desv_SD= c(sd(Edad),sd(Tiempo)), # cálcula la desviación standard
Q1= c(quantile(Edad, .25),quantile(Tiempo, .25)), # cuartil 1
Q2= c(quantile(Edad, .50),quantile(Tiempo, .50)), # cuartil 2
Q3= c(quantile(Edad, .75),quantile(Tiempo, .75)), # cuartil 3
Moda= c(Mode(Edad),Mode(Tiempo)), # Aplicando la moda por la función externa
Min= c(min(Edad),min(Tiempo)), # obteniendo el mínimo de valor
Max= c(max(Edad),max(Tiempo)), # obteniendo el máximo de valor
contar=n() # cuenta los valores
)
knitr::kable(MedEst) # pasamos la variable MedEst para presentar la tabla
Tabla5 <- Aids3 %>% group_by(C_Transmision) %>% summarise(Total=n(),
Age_Media=mean(Edad),  # función que cálcula la media
sd_Age=sd(Edad), # función que cálcula la desviación
se_Age=sd_Age/sqrt(Total), # desviación tipica
upper_limit=Age_Media+se_Age, # cálculos de los límites
lower_limit=Age_Media-se_Age) %>%
dplyr::mutate(Porcentaje = round(Total/sum(Total)*100, 1) ) # mutate realiza cambios en la tabla entregando un campo porcentaje
knitr::kable(Tabla5) # se crea la tabla con las medidas de estadísticas
ggplot(Tabla5, aes(x=C_Transmision, y=Age_Media, fill=C_Transmision)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
ggtitle("Transmision del Paciente Edad Media ")+
geom_errorbar(aes(ymin=Age_Media-sd_Age, ymax=Age_Media+sd_Age), width=.2)
Tabla6 <- Aids3 %>% group_by(C_Transmision) %>% summarise(Total=n(),
Tiempo_Media=mean(Tiempo),  # cálcula la media
sd_Tiempo=sd(Tiempo),  # cálcula la desviación
se_Tiempo=sd_Tiempo/sqrt(Total),  # desviación típica
upper_limit=Tiempo_Media+se_Tiempo, # limite superior
lower_limit=Tiempo_Media-se_Tiempo) %>%   # limite inferior
dplyr::mutate(Porcentaje = round(Total/sum(Total)*100, 1) ) # mutate realiza cambios en la tabla entregando un campo porcentaje
knitr::kable(Tabla6)
ggplot(Tabla6, aes(x=C_Transmision, y=Tiempo_Media, fill=C_Transmision)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
ggtitle("Transmision del Paciente Por Tiempo de vida ")+
geom_errorbar(aes(ymin=Tiempo_Media-sd_Tiempo, ymax=Tiempo_Media+sd_Tiempo), width=.2)
# Proceso de transformación de datos en sus atributos tranformamos los campos fechas por campos numéricos para proceso de la información
Aids4<-data.frame(E_Origen=Aids3$E_Origen,Sexo=Aids3$Sexo,F_Diagnostico=as.numeric(Aids3$F_Diagnostico),
F_Muerte=as.numeric(Aids3$F_Muerte),Estado=Aids3$Estado,C_Transmision=Aids3$C_Transmision,
Edad=as.integer(Aids3$Edad))
knitr::kable(head(Aids4,5))
cpmsw1<-Aids4 %>% filter(E_Origen == 'NSW')
#summarise(count=n()) # son 1780 pacientes con VIH
cpmsw1<-tibble(cpmsw1)
knitr::kable(head(cpmsw1,10))
cat(" El total pacientes del estado NSW tienen VIH son: ")
cpmsw2<-Aids4 %>% filter(E_Origen == 'NSW') %>%
summarise(count=n())
cpmsw2
cpqld<-Aids4 %>% group_by(Estado) %>%
filter(E_Origen=='QLD' & Sexo=='M' & Estado=='D')
#cpqld<-tibble(cpqld)
knitr::kable(head(cpqld,6))
cat("El total de pacientes del estado QLD y del sexo masculino han muerto por VIH son: ")
cpqld2<-Aids4 %>% filter(E_Origen=='QLD' & Sexo=='M' & Estado=='D') %>%
summarise(count=n())
cpqld2
pcvic<-Aids4 %>% filter(E_Origen=='VIC', Sexo=='F',Edad<=35 | Edad >=50) %>% dplyr::select(E_Origen,Sexo,Edad)
pcvic<-tibble(pcvic)
knitr::kable(head(pcvic,11))
cat("Sexo femenino VIC que no están en el rango de edades entre 35 y 50 años son:")
pcvic1<-Aids4 %>%  filter(E_Origen=='VIC', Sexo=='F', Edad<=35 | Edad >=50) %>%
summarise(count=n())
pcvic1
# Proceso de transformación de datos en sus atributos.
Aids5<-data.frame(E_Origen=Aids3$E_Origen,Sexo=Aids3$Sexo,F_Diagnostico=as.numeric(format(Aids3$F_Diagnostico,'%Y')),
F_Muerte=as.numeric(format(Aids3$F_Muerte, '%Y')),Estado=Aids3$Estado,C_Transmision=Aids3$C_Transmision,
Edad=as.integer(Aids3$Edad))
cpdvih<-Aids5 %>% filter(F_Muerte >1982 & Estado=='D') %>% dplyr::select(E_Origen,F_Muerte,Estado,Edad)
knitr::kable(head(cpdvih,7))
cat("Los pacientes con fecha de muerte > a 1892 fueron un total de:")
cpdvih1<-Aids5 %>% filter(F_Muerte >1982 & Estado=='D') %>%
summarise(count=n())
cpdvih1
# se le creal el campo tiempo y se aprovecha de crear Estado de fallecidos del campo muerto.
Aids3<- mutate(Aids3,Muerto = Estado == "D", Tiempo = F_Muerte - F_Diagnostico)
# Proceso de transformación de datos en sus atributos.
Aids6<-data.frame(E_Origen=Aids3$E_Origen,Sexo=Aids3$Sexo,F_Diagnostico=as.numeric(format(Aids3$F_Diagnostico,'%Y')),
F_Muerte=as.numeric(format(Aids3$F_Muerte, '%Y')),Estado=Aids3$Estado,C_Transmision=Aids3$C_Transmision,
Edad=as.integer(Aids3$Edad),Muerto=as.character(Aids3$Muerto), Tiempo=as.integer(Aids3$Tiempo))
tablatib<-tibble(Aids6) # la tabla se convierte en una tabla tibble
knitr::kable(head(tablatib,6)) # convertimos la tabla en una presentación de las 10 primeras filas.
pcmtdm<-Aids6 %>% group_by(E_Origen)  %>%
filter(Tiempo == min(Tiempo)) %>%
summarise(minimoTiempo=min(Tiempo), count=n())
knitr::kable(pcmtdm)
cat("Los pacientes antes de su fecha de muerte o del fin de la observación fueron: ")
pcmtdm2<-Aids6 %>% dplyr::select(Tiempo)  %>%
filter(Tiempo == min(Tiempo)) %>%
summarise(minimoTiempo=min(Tiempo), count=n())
pcmtdm2
pcdcsm<- Aids6 %>% filter(F_Diagnostico >=1986, Edad < 35)
pcdcsm<-tibble(pcdcsm)
knitr::kable(head(pcdcsm,8))
#cat("pacientes diagnosticados después de 1986 , ¿Cuántos son menores de 35 años?, en total son:")
pcdcsm1<- Aids6 %>% filter(F_Diagnostico >1986, Edad < 35) %>%
summarise(count=n())
pcdcsm1
pcgfcb<-Aids6 %>% filter(Sexo=='F', C_Transmision=='blood')
pcgfcb<-tibble(pcgfcb)
knitr::kable(head(pcgfcb, 8))
cat("Contagiados por sangre fueron de un total de:")
pcgfcb<-Aids6 %>% filter(Sexo=='F', C_Transmision=='blood') %>%
summarise(count=n())
pcgfcb
ftra<-Aids6 %>%
dplyr::select(C_Transmision ) %>%  # selecciona el campo por C_Transmision
group_by(C_Transmision ) %>%  # agrupa por una o más variable C_Transmision
filter(C_Transmision !='blood') %>%  # obtiene datos por filtros C_Transmision
summarise(n=n()) %>% # realiza una operacion por cada grupo en menos filas
arrange(n) # ordena las filas según los valores de una o más columnas
knitr::kable(ftra)
pcepnpcf<-Aids6 %>% group_by(Sexo) %>%
filter(F_Diagnostico>1980) %>%
summarise(Edad_Media=mean(Edad), count=n())
knitr::kable(pcepnpcf)
